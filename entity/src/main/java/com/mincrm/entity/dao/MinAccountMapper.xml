<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mincrm.entity.dao.MinAccountMapper">
  <resultMap id="BaseResultMap" type="com.mincrm.entity.model.MinAccount">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="account_tel" jdbcType="VARCHAR" property="accountTel" />
    <result column="account_pas" jdbcType="VARCHAR" property="accountPas" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="active_flag" jdbcType="TINYINT" property="activeFlag" />
    <result column="cdate" jdbcType="TIMESTAMP" property="cdate" />
    <result column="udate" jdbcType="TIMESTAMP" property="udate" />
    <result column="create_uid" jdbcType="INTEGER" property="createUid" />
    <result column="update_uid" jdbcType="INTEGER" property="updateUid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    uid, account_tel, account_pas, account_name, active_flag, cdate, udate, create_uid, 
    update_uid
  </sql>
  <select id="selectByExample" parameterType="com.mincrm.entity.model.MinAccountExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from min_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.mincrm.entity.model.MinAccountExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from min_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.mincrm.entity.model.MinAccount">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="uid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into min_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountTel != null">
        account_tel,
      </if>
      <if test="accountPas != null">
        account_pas,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="activeFlag != null">
        active_flag,
      </if>
      <if test="cdate != null">
        cdate,
      </if>
      <if test="udate != null">
        udate,
      </if>
      <if test="createUid != null">
        create_uid,
      </if>
      <if test="updateUid != null">
        update_uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountTel != null">
        #{accountTel,jdbcType=VARCHAR},
      </if>
      <if test="accountPas != null">
        #{accountPas,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="activeFlag != null">
        #{activeFlag,jdbcType=TINYINT},
      </if>
      <if test="cdate != null">
        #{cdate,jdbcType=TIMESTAMP},
      </if>
      <if test="udate != null">
        #{udate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=INTEGER},
      </if>
      <if test="updateUid != null">
        #{updateUid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mincrm.entity.model.MinAccountExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from min_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update min_account
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.accountTel != null">
        account_tel = #{record.accountTel,jdbcType=VARCHAR},
      </if>
      <if test="record.accountPas != null">
        account_pas = #{record.accountPas,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null">
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.activeFlag != null">
        active_flag = #{record.activeFlag,jdbcType=TINYINT},
      </if>
      <if test="record.cdate != null">
        cdate = #{record.cdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.udate != null">
        udate = #{record.udate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUid != null">
        create_uid = #{record.createUid,jdbcType=INTEGER},
      </if>
      <if test="record.updateUid != null">
        update_uid = #{record.updateUid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update min_account
    set uid = #{record.uid,jdbcType=INTEGER},
      account_tel = #{record.accountTel,jdbcType=VARCHAR},
      account_pas = #{record.accountPas,jdbcType=VARCHAR},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      active_flag = #{record.activeFlag,jdbcType=TINYINT},
      cdate = #{record.cdate,jdbcType=TIMESTAMP},
      udate = #{record.udate,jdbcType=TIMESTAMP},
      create_uid = #{record.createUid,jdbcType=INTEGER},
      update_uid = #{record.updateUid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mincrm.entity.model.MinAccount">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update min_account
    <set>
      <if test="accountTel != null">
        account_tel = #{accountTel,jdbcType=VARCHAR},
      </if>
      <if test="accountPas != null">
        account_pas = #{accountPas,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="activeFlag != null">
        active_flag = #{activeFlag,jdbcType=TINYINT},
      </if>
      <if test="cdate != null">
        cdate = #{cdate,jdbcType=TIMESTAMP},
      </if>
      <if test="udate != null">
        udate = #{udate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        create_uid = #{createUid,jdbcType=INTEGER},
      </if>
      <if test="updateUid != null">
        update_uid = #{updateUid,jdbcType=INTEGER},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>