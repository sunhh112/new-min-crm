package com.mincrm.entity.dao;

import com.mincrm.entity.model.MinAccount;
import com.mincrm.entity.model.MinAccountExample;
import java.util.List;

import org.apache.ibatis.annotations.*;

@Mapper
public interface MinAccountMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_account
     *
     * @mbg.generated
     */
    long countByExample(MinAccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_account
     *
     * @mbg.generated
     */
    int deleteByExample(MinAccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_account
     *
     * @mbg.generated
     */
    @Delete({
        "delete from min_account",
        "where uid = #{uid,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer uid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_account
     *
     * @mbg.generated
     */
    @Insert({
        "insert into min_account (account_tel, account_pas, ",
        "account_name, active_flag, ",
        "cdate, udate, ",
        "create_uid, update_uid)",
        "values (#{accountTel,jdbcType=VARCHAR}, #{accountPas,jdbcType=VARCHAR}, ",
        "#{accountName,jdbcType=VARCHAR}, #{activeFlag,jdbcType=TINYINT}, ",
        "#{cdate,jdbcType=TIMESTAMP}, #{udate,jdbcType=TIMESTAMP}, ",
        "#{createUid,jdbcType=INTEGER}, #{updateUid,jdbcType=INTEGER})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="uid", before=false, resultType=Integer.class)
    int insert(MinAccount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_account
     *
     * @mbg.generated
     */
    int insertSelective(MinAccount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_account
     *
     * @mbg.generated
     */
    List<MinAccount> selectByExample(MinAccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_account
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "uid, account_tel, account_pas, account_name, active_flag, cdate, udate, create_uid, ",
        "update_uid",
        "from min_account",
        "where uid = #{uid,jdbcType=INTEGER}"
    })
    @ResultMap("com.mincrm.entity.dao.MinAccountMapper.BaseResultMap")
    MinAccount selectByPrimaryKey(Integer uid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_account
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") MinAccount record, @Param("example") MinAccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_account
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") MinAccount record, @Param("example") MinAccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_account
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(MinAccount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_account
     *
     * @mbg.generated
     */
    @Update({
        "update min_account",
        "set account_tel = #{accountTel,jdbcType=VARCHAR},",
          "account_pas = #{accountPas,jdbcType=VARCHAR},",
          "account_name = #{accountName,jdbcType=VARCHAR},",
          "active_flag = #{activeFlag,jdbcType=TINYINT},",
          "cdate = #{cdate,jdbcType=TIMESTAMP},",
          "udate = #{udate,jdbcType=TIMESTAMP},",
          "create_uid = #{createUid,jdbcType=INTEGER},",
          "update_uid = #{updateUid,jdbcType=INTEGER}",
        "where uid = #{uid,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(MinAccount record);
}