package com.mincrm.entity.dao;

import com.mincrm.entity.model.MinVerification;
import com.mincrm.entity.model.MinVerificationExample;
import java.util.List;

import org.apache.ibatis.annotations.*;

@Mapper
public interface MinVerificationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_verification
     *
     * @mbg.generated
     */
    long countByExample(MinVerificationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_verification
     *
     * @mbg.generated
     */
    int deleteByExample(MinVerificationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_verification
     *
     * @mbg.generated
     */
    @Delete({
        "delete from min_verification",
        "where vid = #{vid,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer vid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_verification
     *
     * @mbg.generated
     */
    @Insert({
        "insert into min_verification (verification_code, tel, ",
        "ip, create_date, ",
        "create_uid, sessionid, ",
        "minute, vtype)",
        "values (#{verificationCode,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, ",
        "#{ip,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, ",
        "#{createUid,jdbcType=INTEGER}, #{sessionid,jdbcType=VARCHAR}, ",
        "#{minute,jdbcType=INTEGER}, #{vtype,jdbcType=INTEGER})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="vid", before=false, resultType=Integer.class)
    int insert(MinVerification record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_verification
     *
     * @mbg.generated
     */
    int insertSelective(MinVerification record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_verification
     *
     * @mbg.generated
     */
    List<MinVerification> selectByExample(MinVerificationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_verification
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "vid, verification_code, tel, ip, create_date, create_uid, sessionid, minute, ",
        "vtype",
        "from min_verification",
        "where vid = #{vid,jdbcType=INTEGER}"
    })
    @ResultMap("com.mincrm.entity.dao.MinVerificationMapper.BaseResultMap")
    MinVerification selectByPrimaryKey(Integer vid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_verification
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") MinVerification record, @Param("example") MinVerificationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_verification
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") MinVerification record, @Param("example") MinVerificationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_verification
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(MinVerification record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table min_verification
     *
     * @mbg.generated
     */
    @Update({
        "update min_verification",
        "set verification_code = #{verificationCode,jdbcType=VARCHAR},",
          "tel = #{tel,jdbcType=VARCHAR},",
          "ip = #{ip,jdbcType=VARCHAR},",
          "create_date = #{createDate,jdbcType=TIMESTAMP},",
          "create_uid = #{createUid,jdbcType=INTEGER},",
          "sessionid = #{sessionid,jdbcType=VARCHAR},",
          "minute = #{minute,jdbcType=INTEGER},",
          "vtype = #{vtype,jdbcType=INTEGER}",
        "where vid = #{vid,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(MinVerification record);
}