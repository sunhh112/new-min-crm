spring.profiles.active=dev
server.servlet.context-path=/
server.port=80
#下面这两个配置，可以在每次连接的时候判断一些连接是否有效
spring.datasource.druid.test-on-borrow=true
spring.datasource.druid.test-while-idle=true
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.filters=stat,wall,log4j
spring.datasource.logSlowSql=true
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
# Mybatis配置 #classpath:mapper/**/*.xml
mybatis.mapperLocations:classpath:com/mincrm/entity/dao/*.xml
#输出打印语句
#logging.level.com.mincrm.entity.dao=debug
#mybatis.configLocation: classpath:mybatis.xml
#type-aliases-package: com.example.entity
#freemarker
spring.freemarker.charset=UTF-8
#spring.freemarker.cache=true
#没有缓存及时刷新 生产环境需要修改为true
#spring.freemarker.cache=false
spring.freemarker.settings.template_update_delay=0
spring.freemarker.enabled=true
spring.freemarker.expose-request-attributes=true
spring.freemarker.expose-session-attributes=true
spring.freemarker.expose-spring-macro-helpers=true
spring.freemarker.request-context-attribute=request
spring.freemarker.template-loader-path=classpath:/templates/
spring.freemarker.suffix=.ftl
server.jsp-servlet.init-parameters.development=true
#freemarker热启动
#spring.mvc.view.prefix=/WEB-INF/jsp/
#spring.mvc.view.suffix=.ftl
